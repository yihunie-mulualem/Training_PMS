// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerMS.DBContext;

#nullable disable

namespace PerMS.Migrations
{
    [DbContext(typeof(PerMSContext))]
    [Migration("20240614120100_june")]
    partial class june
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PerMS.BussinesUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BussinesUnit_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BussinesUnit_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClusterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.ToTable("BussinesUnits");
                });

            modelBuilder.Entity("PerMS.Cluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictID");

                    b.ToTable("Clusters");
                });

            modelBuilder.Entity("PerMS.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BussinesUnitId")
                        .HasColumnType("int");

                    b.Property<bool>("Department_Active")
                        .HasColumnType("bit");

                    b.Property<int>("Department_Code")
                        .HasColumnType("int");

                    b.Property<string>("Department_CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Department_DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BussinesUnitId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("PerMS.Employee_Approve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("HeadMonthlyPMS_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadMonthlyPMS_ID");

                    b.ToTable("Employee_Approves");
                });

            modelBuilder.Entity("PerMS.HeadQuarterlyPms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ability_to_work_Under_pressure_and_Multi_Tasking_skills")
                        .HasColumnType("int");

                    b.Property<int>("Accuracy_Efficiency_and_Time_Management")
                        .HasColumnType("int");

                    b.Property<string>("Additional_Comment_or_sugesstion_by_Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Analytical_skills")
                        .HasColumnType("int");

                    b.Property<int>("Attitude_toward_Internal_and_External_customers_Collagues_and_the_Bank")
                        .HasColumnType("int");

                    b.Property<int>("Collaboration_and_Team_work")
                        .HasColumnType("int");

                    b.Property<int>("Confidentiality_Honesty_Integertiy")
                        .HasColumnType("int");

                    b.Property<int>("Dressing_Code_and_Attendance")
                        .HasColumnType("int");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Employee_SignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_signature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employes_Comment_on_Evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiscalYear_Id")
                        .HasColumnType("int");

                    b.Property<int>("Innovation_and_Problem_Solving_Skills")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmployeeApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupervisorApproved")
                        .HasColumnType("bit");

                    b.Property<int>("Knowledge_of_the_Job_and_Initiative_to_learn")
                        .HasColumnType("int");

                    b.Property<int>("Month_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name_of_Employee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_of_Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Oral_and_Written_Commuinication_Skills")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor_signature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Supevisor_ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalQuarterly")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("FiscalYear_Id");

                    b.HasIndex("Month_Id");

                    b.ToTable("HeadQuarterlyPms");
                });

            modelBuilder.Entity("PerMS.HierarchyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HierarchyGroup_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyGroup_Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyGroup_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyGroup_PositionIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HierarchyGroup_ReportsTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HierarchyGroups");
                });

            modelBuilder.Entity("PerMS.JobPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JobPosition_Active")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPosition_Category")
                        .HasColumnType("int");

                    b.Property<string>("JobPosition_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition_CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition_DateCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPosition_Grade")
                        .HasColumnType("int");

                    b.Property<string>("JobPosition_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobPositions");
                });

            modelBuilder.Entity("PerMS.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("PerMS.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BussinesUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("Employee_Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Employee_ContractExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Employee_DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_EmployeeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_EmploymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Employee_GradeLevel")
                        .HasColumnType("int");

                    b.Property<string>("Employee_Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HierarchyGroupId")
                        .HasColumnType("int");

                    b.Property<int>("JobPositionId")
                        .HasColumnType("int");

                    b.Property<int>("MainID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BussinesUnitId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HierarchyGroupId");

                    b.HasIndex("JobPositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PerMS.Models.FiscalYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("FiscalYear_Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FiscalYear_EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FiscalYear_IsCurrentYear")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FiscalYear_StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalYear_Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FiscalYears");
                });

            modelBuilder.Entity("PerMS.Models.Month", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SequenceNumberOnYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("PerMS.MonthlyPmsWeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ability_to_work_Under_pressure_and_Multi_Tasking_skills")
                        .HasColumnType("int");

                    b.Property<int>("Accuracy_Efficiency_and_Time_Management")
                        .HasColumnType("int");

                    b.Property<int>("Analytical_skills")
                        .HasColumnType("int");

                    b.Property<int>("Attitude_toward_Internal_and_External_customers_Collagues_and_the_Bank")
                        .HasColumnType("int");

                    b.Property<int>("Collaboration_and_Team_work")
                        .HasColumnType("int");

                    b.Property<int>("Confidentiality_Honesty_Integertiy")
                        .HasColumnType("int");

                    b.Property<int>("Dressing_Code_and_Attendance")
                        .HasColumnType("int");

                    b.Property<int>("Innovation_and_Problem_Solving_Skills")
                        .HasColumnType("int");

                    b.Property<int>("Knowledge_of_the_Job_and_Initiative_to_learn")
                        .HasColumnType("int");

                    b.Property<int>("Oral_and_Written_Commuinication_Skills")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonthlyPmsWeights");
                });

            modelBuilder.Entity("PerMS.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Role_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Role_CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Role_CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role_LastModfBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Role_LastModfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PerMS.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("User_Active")
                        .HasColumnType("bit");

                    b.Property<int>("User_BussinesUnitId")
                        .HasColumnType("int");

                    b.Property<string>("User_CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("User_CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("User_FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_RoleId")
                        .HasColumnType("int");

                    b.Property<string>("User_UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("User_BussinesUnitId");

                    b.HasIndex("User_EmployeeId");

                    b.HasIndex("User_RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PerMS.BussinesUnit", b =>
                {
                    b.HasOne("PerMS.Cluster", "Clusters")
                        .WithMany("BussinesUnits")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clusters");
                });

            modelBuilder.Entity("PerMS.Cluster", b =>
                {
                    b.HasOne("PerMS.Models.District", "Districts")
                        .WithMany("Clusters")
                        .HasForeignKey("DistrictID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("PerMS.Department", b =>
                {
                    b.HasOne("PerMS.BussinesUnit", "BussinesUnit")
                        .WithOne("Departments")
                        .HasForeignKey("PerMS.Department", "BussinesUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BussinesUnit");
                });

            modelBuilder.Entity("PerMS.Employee_Approve", b =>
                {
                    b.HasOne("PerMS.HeadQuarterlyPms", "HeadQuarterlyPms")
                        .WithMany()
                        .HasForeignKey("HeadMonthlyPMS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadQuarterlyPms");
                });

            modelBuilder.Entity("PerMS.HeadQuarterlyPms", b =>
                {
                    b.HasOne("PerMS.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerMS.Models.FiscalYear", "FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYear_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerMS.Models.Month", "Month")
                        .WithMany()
                        .HasForeignKey("Month_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("FiscalYear");

                    b.Navigation("Month");
                });

            modelBuilder.Entity("PerMS.Models.Employee", b =>
                {
                    b.HasOne("PerMS.BussinesUnit", "BussinesUnit")
                        .WithMany("Employees")
                        .HasForeignKey("BussinesUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PerMS.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PerMS.HierarchyGroup", "HierarchyGroup")
                        .WithMany("Employees")
                        .HasForeignKey("HierarchyGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PerMS.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BussinesUnit");

                    b.Navigation("Department");

                    b.Navigation("HierarchyGroup");

                    b.Navigation("JobPosition");
                });

            modelBuilder.Entity("PerMS.User", b =>
                {
                    b.HasOne("PerMS.BussinesUnit", "BussinesUnit")
                        .WithMany("Users")
                        .HasForeignKey("User_BussinesUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerMS.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("User_EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerMS.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("User_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BussinesUnit");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PerMS.BussinesUnit", b =>
                {
                    b.Navigation("Departments")
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PerMS.Cluster", b =>
                {
                    b.Navigation("BussinesUnits");
                });

            modelBuilder.Entity("PerMS.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PerMS.HierarchyGroup", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PerMS.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PerMS.Models.District", b =>
                {
                    b.Navigation("Clusters");
                });

            modelBuilder.Entity("PerMS.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
